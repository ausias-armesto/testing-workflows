name: Merge

on:
  pull_request:
    types:
      # - closed
      - synchronize

concurrency:
  group: merge
  cancel-in-progress: false

jobs:

  tag:
    name: Tag images
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && (github.event.pull_request.base.ref == 'master' || contains(github.event.pull_request.base.ref,'release/'))
    steps:
      - name: Checkout hoprnet repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Google Cloud Credentials
        id: auth
        uses: google-github-actions/auth@v1
        with:
          token_format: "access_token"
          credentials_json: ${{ secrets.GOOGLE_HOPRASSOCIATION_CREDENTIALS_REGISTRY }}

      - name: Login Google Container Registry
        uses: docker/login-action@v2
        with:
          registry: europe-west3-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: "Tag docker images"
        run: |
          docker_registry="europe-west3-docker.pkg.dev/${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}/docker-images"
          # Set docker PR tag
          if echo "${{ github.event.pull_request.labels.*.name }}" | grep -q release; then
            docker_pr_tag=$(jq -r '.version' packages/hoprd/package.json)
          else
            docker_pr_tag=$(./scripts/get-next-version.sh Build ${{ github.event.pull_request.number }} | sed 's/+/-/')
          fi

          # Set docker stable tag
          declare base_branch=${{ github.event.pull_request.base.ref }}
          if [ "${base_branch}" == "master" ]; then
            docker_stable_tag=latest
          else
            docker_stable_tag=${base_branch/release\//}
          fi

          # Tag images
          images=(hopr-toolchain hopli hoprd hopr-anvil hopr-pluto)
          for image in ${images[@]}; 
          do 
            gcloud artifacts docker tags add ${docker_registry}/${image}:${build_version} ${docker_registry}/${image}:${docker_pr_tag}
            gcloud artifacts docker tags add ${docker_registry}/${image}:${build_version} ${docker_registry}/${image}:${docker_stable_tag}
          done

  deploy_prn_nodes:
    name: Deploy PRN nodes
    runs-on: ubuntu-latest
    if: needs.tag.result == 'success'
    needs:
      - tag
    steps:
      - name: Checkout hoprnet repository
        uses: actions/checkout@v3

      - name: Set up Google Cloud Credentials
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_HOPRASSOCIATION_CREDENTIALS_REGISTRY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}
          install_components: beta

      - name: Deploy on GCP
        run: |
          declare base_branch=${{ github.event.pull_request.base.ref }}
          if [[ "${base_branch}" == "master" ]]; then
            ./scripts/deploy.sh rotsee
          elif [[ "${base_branch}" =~ ^"release" ]]; then
            ./scripts/deploy.sh "${base_branch/release\/}-dufour"
          else
            echo "Skipping deployment"
          fi
        env:
          DEPLOYER_PRIVATE_KEY: ${{ secrets.DEPLOYER_WALLET_PRIVATE_KEY }}
          HOPRD_PASSWORD: ${{ secrets.BS_PASSWORD }}
          HOPRD_API_TOKEN: ${{ secrets.HOPRD_API_TOKEN }}
          FAUCET_SECRET_API_KEY: ${{ secrets.FAUCET_SECRET_API_KEY }}
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN }}

      - name: Add ssh key to deploy to Hetzner
        uses: webfactory/ssh-agent@v0.7.0
        with:
            ssh-private-key: ${{ secrets.HETZNER_ROTSEE_SSH_PRIVATE_KEY }}

      - name: Deploy on Hetzner
        run: |
          declare base_branch=${{ github.event.pull_request.base.ref }}
          if [ "${base_branch}" == "master" ]; then
            hosts=($(echo "${{ vars.HETZNER_ROTSEE_NODES }}" | sed 's/\r//'  | sed 's/\n/ /'))
          else
            hosts=""
          fi
          echo "Restarting hosts: ${hosts}"
          for host in ${hosts[@]}; do
            ssh -o StrictHostKeyChecking=no root@${host} "service hoprd restart"
          done
        env:
          DEPLOYER_PRIVATE_KEY: ${{ secrets.DEPLOYER_WALLET_PRIVATE_KEY }}
          IDENTITY_PASSWORD: ${{ secrets.BS_PASSWORD }}
          API_TOKEN: ${{ secrets.HOPRD_API_TOKEN }}
          FAUCET_SECRET_API_KEY: ${{ secrets.FAUCET_SECRET_API_KEY }}
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN }}

      - name: Notify Success
        if: ${{ success() }}
        run: |
          ./scripts/notify-matrix-cluster-info.sh
        env:
          MATRIX_ROOM: ${{ env.MATRIX_CLUSTER_INFO_ROOM }}
          HOPRD_API_TOKEN: ${{ secrets.HOPRD_API_TOKEN }}

      - name: Notify Failure
        if: ${{ failure() }}
        run: |
          ./scripts/notify-matrix-github-workflow-failure.sh "${MATRIX_ROOM}" "${{ github.repository }}" \
            "${{ github.workflow }}" "${{ github.run_id }}"


